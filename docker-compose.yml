version: '3.8'
services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - kafka
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_DATABASE=go_with_me_chat
      - DB_NAME=go_with_me
      - DB_USER=root
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
      - SERVER_PORT=8080
      - GIN_MODE=debug
  
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: go_with_me
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "go_with_me",
          "-U",
          "postgres"
        ]
      start_period: 40s
      start_interval: 1s
  redis:
    image: redis
    ports:
      - "6379:6379"

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: broker
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 2@kafka-controller:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CLUSTER_ID: 'q1Sh-9_ISia_zwGINzRvyQ'
    depends_on:
      - controller

  controller:
    image: confluentinc/cp-kafka:7.7.1
    hostname: kafka-controller 
    environment:
      KAFKA_PROCESS_ROLES: controller
      KAFKA_NODE_ID: 2
      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 2@kafka-controller:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: 'q1Sh-9_ISia_zwGINzRvyQ'
    ports:
      - "9093:9093"

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"   # Expose LocalStack endpoint for all services (including S3)
      - "4571:4571"
    environment:
      - SERVICES=s3    # Activate S3 service
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    command: >
      /bin/sh -c "localstack start & awslocal s3 mb s3://go-with-me-images-events && awslocal s3 mb s3://go-with-me-images-chat-event && tail -f /dev/null"

networks:
  default:
    driver: bridge